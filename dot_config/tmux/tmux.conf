# Unbind ALL keybindings whilst REBINDING defaults
run-shell '\
    export f=$(mktemp) \
    && tmux -f /dev/null -L temp start-server \; list-keys > $f \
    && tmux unbind -a \; source-file $f'

set -g mouse on # enable mouse support to jump through windows and panes
set -g default-terminal "xterm-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
set -s set-clipboard on
set-option -g status-position top
set -g xterm-keys on
# set -g default-command /opt/homebrew/bin/fish

# 适配zen.nvim插件
set-option -g allow-passthrough on

# For yazi to preview image
set -g allow-passthrough all
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# Set prefix
# unbind C-b
set -g prefix C-b
bind C-b send-prefix

# Custom keybind
unbind r
bind r source-file $HOME/.config/tmux/tmux.conf ## Tmux source-file

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

################################################### Better scrolling behavior ###################################################
bind-key -n WheelUpPane if-shell -F "#{alternate_on}" \
  "if-shell -F \"#{mouse_any_flag}\" \
    \"send-key -M\" \
    \"send-key -N 3 Up\"" \
  "copy-mode -e ; send-key -M"
bind-key -n WheelDownPane if-shell -F "#{alternate_on}" \
  "if-shell -F \"#{mouse_any_flag}\" \
    \"send-key -M\" \
    \"send-key -N 3 Down\"" \
  "if-shell -F \"#{pane_in_mode}\" \
    \"send-key -M\""
bind-key -n PageUp if-shell -F "#{alternate_on}" \
  "send-key PageUp" \
  "if-shell -F \"#{pane_in_mode}\" \
    \"send-key PageUp\" \
    \"copy-mode -eu\""
##################################################################################################################################

################################################### Manage tmux sessions by fzf ###################################################
 bind j display-popup -E -w 80% -h 60% -T ' tmux-session-manager ' '
  tmux list-sessions -F "#{session_name}|#{session_windows}|#{?session_attached,attached,detached}" |
  grep -v "^$(tmux display-message -p "#S")|" |
  awk -F"|" "{
    status = (\$3 == \"attached\") ? \"\" : \"\"
    printf \"%-20s %s %2s windows %s\\n\", \$1, status, \$2, \"\"
  }" |
  fzf --reverse \
      --prompt="-> " \
      --header="═══ Session Switcher ═══ | Ctrl-R: refresh | Ctrl-D: delete | Ctrl-N: new-session" \
      --header-first \
      --border=rounded \
      --color="header:italic" \
      --preview="tmux list-windows -t {1} -F \"  #{window_index}: #{window_name} #{?window_active,(active),}\"" \
      --preview-window="right:40%:wrap" \
      --bind="ctrl-r:reload(tmux list-sessions -F \"#{session_name}|#{session_windows}|#{?session_attached,attached,detached}\" | grep -v \"^\$(tmux display-message -p \"#S\")|\" | awk -F\"|\" \"{status = (\\\$3 == \\\"attached\\\") ? \\\"\\\" : \\\"\\\"; printf \\\"%-20s %s %2s windows %s\\\\n\\\", \\\$1, status, \\\$2, \\\"\\\"}\")" \
      --bind="ctrl-d:execute(tmux kill-session -t {1})+reload(tmux list-sessions -F \"#{session_name}|#{session_windows}|#{?session_attached,attached,detached}\" | grep -v \"^\$(tmux display-message -p \"#S\")|\" | awk -F\"|\" \"{status = (\\\$3 == \\\"attached\\\") ? \\\"\\\" : \\\"\\\"; printf \\\"%-20s %s %2s windows %s\\\\n\\\", \\\$1, status, \\\$2, \\\"\\\"}\")" \
      --bind="ctrl-n:execute(bash -c '\''echo -n -e \"== New tmux Session === \n Session Name ->  \" && read name && [ -n \"\$name\" ] && tmux new-session -d -s \"\$name\" 2>/dev/null && tmux switch-client -t \"\$name\"'\'')+abort" \
      --info=inline \
      --layout=reverse |
  awk "{print \$1}" |
  xargs -r tmux switch-client -t
'
##################################################################################################################################

# 列出原本的默认keymap
# tmux -f /dev/null -L temp start-server \; list-keys

# Use tmux-yank and rebind keys to make text selection vim-like.
set-window-option -g mode-keys vi
# set -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection -x
# unbind -T copy-mode-vi MouseDragEnd1Pane

# ====================
# TPM
# prefix + I: Installs new plugins from GitHub or any other git repository && Refreshes TMUX environment
# prefix + U: update plugin(s) 
# prefix + alt + u: remove/uninstall plugins not on the plugin list
# ====================

# set plugin install path
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.local/share/tmux/plugins/'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'
# set -g @plugin 'catppuccin/tmux#v2.1.3' # See https://github.com/catppuccin/tmux/tags for additional tags
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'christoomey/vim-tmux-navigator' # Smart pane switching with awareness of Vim splits.
set -g @plugin 'jimeh/tmuxifier'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'wfxr/tmux-fzf-url'
set -g @plugin 'sainnhe/tmux-fzf'

# more options here: https://github.com/sainnhe/tmux-fzf/issues/6#issuecomment-578750879
# bind w run-shell -b "~/.local/share/tmux/plugins//tmux-fzf/scripts/window.sh switch"
# set -g @plugin 'schasse/tmux-jump'
# set -g @plugin 'fcsonline/tmux-thumbs'

# Themes
set -g @catppuccin_flavor 'mocha' # latte, frappe, macchiato or mocha
set -g @catppuccin_status_background none
set -g @catppuccin_window_status_style "custom" # basic, rounded, slanted, custom, or none

set -g @catppuccin_window_current_text_color "#{@thm_surface_1}"
# set -g @catppuccin_window_current_text "#{b:pane_current_path} " # Don't display the full path, but just the last segment, https://jonathanmh.com/p/tmux-show-current-directory-in-window-status/
set -g @catppuccin_window_current_text '#W '
set -g @catppuccin_window_current_middle_separator "#[bg=#{@thm_surface_1},fg=#{@thm_yellow}]"
set -g @catppuccin_window_current_number_color "#{@thm_yellow}"
set -g @catppuccin_window_current_right_separator "#[bg=default,fg=#{@thm_yellow}]█"

set -g @catppuccin_window_left_separator "#[bg=default,fg=#{@thm_surface_1}]"
set -g @catppuccin_window_middle_separator ""
set -g @catppuccin_window_right_separator "#[bg=default,fg=#{@thm_surface_1}]█"
set -g @catppuccin_window_text ""
set -g @catppuccin_window_number "#I"
set -g @catppuccin_window_number_color "#{@thm_surface_1}"
set -g @catppuccin_window_number_position "right"

set -g @catppuccin_status_right_separator " " # "" "█"
set -g @catppuccin_status_module_bg_color default

run '#{TMUX_PLUGIN_MANAGER_PATH}/tmux/catppuccin.tmux'

set -g status-right-length 100
set -g status-left-length 100
set -g status-justify centre

set -g status-left ""
set -ag status-left "#{E:@catppuccin_status_session}"

set -g status-right ""
set -ag status-right "#{E:@catppuccin_status_application}"

set -agF status-right "#[bg=default,fg=#{@thm_blue}]#[reverse]󰻠 "
set -ag status-right "#[bg=default,fg=#{@thm_fg}]#[noreverse] #{cpu_percentage} "

set -agF status-right "#[bg=default,fg=#{@thm_peach}]#[reverse]󰍛 "
set -ag status-right "#[bg=default,fg=#{@thm_fg}]#[noreverse] #{ram_percentage} "

# Auto install plugins when start tmux
if "test ! -d $HOME/.local/share/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm $HOME/.local/share/tmux/plugins/tpm && $HOME/.local/share/tmux/plugins/tpm/bin/install_plugins'"
   
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '$HOME/.local/share/tmux/plugins/tpm/tpm'
